plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.11.0'
    id 'maven-publish'
}

Boolean isSnapshot = pluginVersion.endsWith('-SNAPSHOT')

publishing {
    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri("https://maven.pkg.github.com/ianpilipski/IPTech-GradleUnityPlugin")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}

sourceCompatibility = 1.8

repositories {
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    if(isSnapshot) {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ianpilipski/IPTech-GradleXCodePlugin")
            credentials {
                username = 'ianpilipski'
                password = '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' //public-read-packages token
            }
        }
    }
}

//allow publish key/secret override from environment variable
task setupPluginUpload {
    doLast {
        String key = System.env.gradlePublishKey
        String secret = System.env.gradlePublishSecret
        if(!key || !secret) {
            throw new RuntimeException("gradlePublishKey and/or gradlePublishSecret are not defined environment variables")
        }

        System.properties.setProperty('gradle.publish.key', System.env.gradlePublishKey)
        System.properties.setProperty('gradle.publish.secret', System.env.gradlePublishSecret)
    }
    tasks.publishPlugins.dependsOn(delegate)
}

version = pluginVersion
group 'com.iptech.gradle'
description = 'A plugin that will execute scripts and build Unity projects'

pluginBundle {
    website = 'https://github.com/ianpilipski/IPTech-GradleUnityPlugin'
    vcsUrl = 'https://github.com/ianpilipski/IPTech-GradleUnityPlugin'
    tags = ['unity', 'unity3d', 'iptech']
}

gradlePlugin {
    plugins {
        unityPlugin {
            id = 'com.iptech.gradle.unity-plugin'
            displayName = 'IPTech Unity Plugin'
            description = 'A plugin that will execute scripts and build Unity projects'
            implementationClass = 'com.iptech.gradle.unity.UnityPlugin'
        }
    }
}

dependencies {
    def prodPrefx = isSnapshot ? "" : "gradle.plugin."
    def snapShotPostFix = isSnapshot ? "-SNAPSHOT" : ""

    implementation gradleApi()
    implementation 'gradle.plugin.com.iptech.gradle:iptech-nunit-plugin:0.1.0'
    implementation "${prodPrefx}com.iptech.gradle:xcode-plugin:0.1.2${snapShotPostFix}"
}
